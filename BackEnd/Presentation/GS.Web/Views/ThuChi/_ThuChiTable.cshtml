@model ThuChiModel
<script>
    var sotienThu = null;
    var changeSoTienThu = true;
</script>
<div class="gs-form-group">
    <h6>Thông tin thu chi</h6>
    <input asp-for="Guid" type="hidden" />
    <input id="NGAY_HIEN_TAI" value="@DateTime.Now.toDateVNString()" type="hidden" />
    <div class="form-group row">
        <div class="col-sm-9"></div>
        <div class="col-sm-3 text-right">
            <a href="javascript:void(0)" class="btn btn-sm btn-outline-success" onclick="AddRowThuChi()">
                <i class="fa fa-plus"></i>
                Thêm thu chi
            </a>
        </div>
    </div>
    <div class="form-group row">
        <table class="table table-striped table-bordered" id="ThuChiTable">
            <thead>
                <tr style="background-color:#2c78b8;color:white;">
                    <th style="" class="th-center align-middle">STT</th>
                    <th style="" class="th-center align-middle">Số tiền phải thu</th>
                    <th style="" class="th-center align-middle">Số tiền thu</th>
                    <th style="" class="th-center align-middle">Số tiền còn phải thu</th>
                    <th style="width: 120px" class="th-center align-middle">Ngày thu</th>
                    <th style="" class="th-center align-middle">Chi phí</th>
                    <th style="" class="th-center align-middle">Số tiền nộp TKTG</th>
                    <th style="width: 120px" class="th-center align-middle">Ngày nộp</th>
                    <th style="" class="th-center align-middle">Thao tác</th>
                </tr>
            </thead>
            <tbody>

                @if (Model.listModel != null && Model.listModel.Count() > 0)
                {
                    foreach (var model in Model.listModel)
                    {
                        @await Html.PartialAsync("_ThuChiRow", model)
                    }
                }
                <tr id="row_taiSan"></tr>
            </tbody>
        </table>
        <div class="col-sm-12"><span id="CountBanGhi" style="float:right;margin-right:20px;">Tổng số bản ghi: 0</span></div>
    </div>
</div>

<script>
    $(document).ready(function () {
        Index_Row();
        $('span.k-widget.k-maskedtextbox').css('width', 120);
        let FirstRow = $('#ThuChiTable tr[data-isFirst = "True"]');

    });
    function Index_Row() {
        var index = 0;
        $(".row-guid").each(function () {
            var guid = $(this).attr("data-guid");
            index += 1;
            $("#Index_" + guid).text(index);
        });
        $("#CountBanGhi").text("Tổng số bản ghi: " + index);
    }
    function AddRowThuChi(data) {
        var isValidDate = CheckDateBeforeAddRow();
        if (isValidDate) {
            $.ajax({
                type: "GET",
                data: data,
                url: "/ThuChi/_ThuChiRow?KetQuaId=" + "0" + "&SoTienThu=" + sotienThu,
                async: false,
                success: function (data) {
                    sortTableByDate();
                    $(data).insertBefore("#row_taiSan");
                    Index_Row();

                },
                error: function (xhr, ajaxOptions, thrownError) {
                    console.log(ajaxOptions + ": " + thrownError);
                }
            });
        }

    }
    // sort các thu chi theo date
    function sortTableByDate() {
        var n = 3; // số thứ tự của cột date( nếu chèn thêm cột hoặc làm thay đổi thứ tự cột date thì phải sửa ở đây)
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("ThuChiTable");
            switching = true;
            //Set the sorting direction to ascending:
        dir = "asc";
            /*Make a loop that will continue until
            no switching has been done:*/
            while (switching) {
                //start by saying: no switching is done:
                switching = false;
                rows = table.rows;
                /*Loop through all table rows (except the
                first, which contains table headers):*/
                for (i = 2; i < (rows.length - 2); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /*Get the two elements you want to compare,
                    one from current row and one from the next:*/
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    let NgayThu1 = convertStringToDate($(x).find('input').val());
                    let NgayThu2 = convertStringToDate($(y).find('input').val());
                    /*check if the two rows should switch place,
                    based on the direction, asc or desc:*/

                        if (NgayThu1 > NgayThu2) {
                            //if so, mark as a switch and break the loop:
                            shouldSwitch = true;
                            break;
                        }

                }
                if (shouldSwitch) {
                    /*If a switch has been marked, make the switch
                    and mark that a switch has been done:*/
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    //Each time a switch is done, increase this count by 1:
                    switchcount++;
                } else {
                    /*If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again.*/
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

    function SaveThuChi() {

        var checkDate = CheckDateBeforeAddRow();
        if (checkDate) {
        var checkTSK = true;
        var ListTC = [];
        hideAllValmsg();

        $(".row-guid").each(function () {
            var id = ($(this).attr('data-id'));
            var guid = $(this).attr('data-guid');
            var is_First = $(this).attr('data-isFirst');
            checkTSK = CheckVali(guid, checkTSK);

            if (checkTSK) {

                var tstd = {
                    Guid: guid,
                    SO_TIEN_CON_PHAI_THU: $("#@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + guid).val(),
                    SO_TIEN_PHAI_THU: $("#@(Html.IdFor(c=>c.SO_TIEN_PHAI_THU))_" + guid).val(),
                    SO_TIEN_THU: $("#@(Html.IdFor(c=>c.SO_TIEN_THU))_" + guid).val(),
                    CHI_PHI: $("#@(Html.IdFor(c=>c.CHI_PHI))_" + guid).val(),
                    ID: '@Model.ID',
                    NGAY_THU: $("#@(Html.IdFor(c=>c.NGAY_THU))_" + guid).val(),
                    TG_NGAY_NOP: $("#@(Html.IdFor(c=>c.TG_NGAY_NOP))_" + guid).val(),
                    TG_SO_TIEN: $("#@(Html.IdFor(c=>c.TG_SO_TIEN))_" + guid).val(),
                    XU_LY_ID: $('#SelectedXuLyIds').val()[0] ,
                    SelectedXuLyIds: $('#SelectedXuLyIds').val(),
                    DON_VI_ID: '@Model.DON_VI_ID',
                    Is_First: is_First
                }
                ListTC.push(tstd);
            }
        });
        if (checkTSK && checkDate) {
            var _data = {
                SO_TIEN_CON_PHAI_THU: ListTC[0].SO_TIEN_CON_PHAI_THU,
                SO_TIEN_PHAI_THU: ListTC[0].SO_TIEN_PHAI_THU,
                SO_TIEN_THU: ListTC[0].SO_TIEN_THU,
                CHI_PHI: ListTC[0].CHI_PHI,
                ID: ListTC[0].ID,
                NGAY_THU: ListTC[0].NGAY_THU,
                TG_NGAY_NOP: ListTC[0].TG_NGAY_NOP,
                TG_SO_TIEN: ListTC[0].TG_SO_TIEN,
                XU_LY_ID: $('#SelectedXuLyIds').val()[0],
                DON_VI_ID: '@Model.DON_VI_ID',
                listModel: ListTC,
                SelectedXuLyIds: $('#SelectedXuLyIds').val()

            };
            $.ajax({
                type: "POST",
                data: _data,
                url: "/ThuChi/Create",
                async: false,
                success: function (result) {
                    if (CheckValidMessageReturn(result)) {
                        ShowSuccessMessage(result.Message);
                        location.href = "/ThuChi/List";
                    }
                    else {
                        ShowErrorMessage(result.Message);
                    }
                }
            })
        }
        }
        
    }
    function CheckVali(guid, checkTSK) {
        var SO_TIEN_CON_PHAI_THU = $("#@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + guid).val();
        var SO_TIEN_PHAI_THU = $("#@(Html.IdFor(c=>c.SO_TIEN_PHAI_THU))_" + guid).val();
        var SO_TIEN_THU = $("#@(Html.IdFor(c=>c.SO_TIEN_THU))_" + guid).val();
        var NGAY_THU = $("#@(Html.IdFor(c=>c.NGAY_THU))_" + guid).val();
        var CHI_PHI = $("#@(Html.IdFor(c=>c.CHI_PHI))_" + guid).val();
        var TG_NGAY_NOP = $("#@(Html.IdFor(c=>c.TG_NGAY_NOP))_" + guid).val();
        @*if (SO_TIEN_CON_PHAI_THU == null || SO_TIEN_CON_PHAI_THU == "" || SO_TIEN_CON_PHAI_THU <= 0) {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + guid, "Số tiền còn phải thu không được để trống");
        }*@
        if (SO_TIEN_PHAI_THU == null || SO_TIEN_PHAI_THU == "" ) {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_PHAI_THU))_" + guid, "Số tiền phải thu không được để trống");
        }
        @*if (SO_TIEN_THU == null || SO_TIEN_THU == "" || SO_TIEN_THU <= 0) {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_THU))_" + guid, "Số tiền thu không được để trống");
        }*@
        if (NGAY_THU == null || NGAY_THU == "") {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.NGAY_THU))_" + guid, "Ngày thu không được để trống");
        }
        if (CHI_PHI == null || CHI_PHI < 0) {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.CHI_PHI))_" + guid, "Chi phí xử lý không được để trống");
        }
        @*if (SO_TIEN_PHAI_THU != "" && SO_TIEN_CON_PHAI_THU != "" && (+SO_TIEN_PHAI_THU) < (+SO_TIEN_CON_PHAI_THU)) {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + guid, "Số tiền còn phải thu phải bé hơn số tiền phải thu");
        }
        if (SO_TIEN_PHAI_THU != "" && SO_TIEN_THU != "" && (+SO_TIEN_PHAI_THU) < (+SO_TIEN_THU)) {
            checkTSK = false;
            showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_THU))_" + guid, "Số tiền thu phải bé hơn số tiền phải thu");
        }*@
        if (!checkValidateFromDateToDate("#@(Html.IdFor(c=>c.NGAY_THU))_" + guid, "#NGAY_HIEN_TAI", "@(Html.IdFor(c=>c.NGAY_THU))_" + guid, "Ngày thu phải nhỏ hơn ngày hiện tại")) {
            checkTSK = false;
        };
        if (!checkValidateFromDateToDate("#@(Html.IdFor(c=>c.TG_NGAY_NOP))_" + guid, "#NGAY_HIEN_TAI", "@(Html.IdFor(c=>c.TG_NGAY_NOP))_" + guid, "Ngày nộp phải nhỏ hơn ngày hiện tại")) {
            checkTSK = false;
        };
        @*if (!checkTongTienDaThu()) {
             showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_THU))_" + guid, "Tổng số tiền thu phải bé hơn số tiền phải thu");
             checkTSK = false;
        }
        if (!checkTongTienConThu()) {
             showInvalidMessage("@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + guid, "Tổng số tiền còn phải thu phải bé hơn số tiền phải thu");
             checkTSK = false;
        }*@
        return checkTSK;
    };

    function checkTongTienDaThu() {
        var check = true;
        var tongtien = 0;
        $(".row-so-tien-da-thu input").each(function () {
            var id = $(this).attr("id");
            if (id) {
                tongtien += (+$("#" + id).val());
            };
        });
        if (tongtien > (+sotienThu)) {
            check = false;
        }
        return check;
    }

    function checkTongTienConThu() {
        var check = true;
        var tongtien = 0;
        $(".row-so-tien-con-thu input").each(function () {
            var id = $(this).attr("id");
            if (id) {
                tongtien += (+$("#" + id).val());
            };
        });
        if (tongtien > (+sotienThu)) {
            check = false;
        }
        return check;
    }

    function XoaRowThuChi(Guid) {
        bootbox.confirm({
            message: "Bạn có chắc chắn xóa thu chi này?",
            buttons: {
                confirm: {
                    label: '@T("admin.common.yes")',
                },
                cancel: {
                    label: '@T("admin.common.no")',
                },
            },
            callback: function (confirm) {
              if (confirm) {
                    $("#row_" + Guid).remove();
                    Index_Row();
                    CheckBtn();
                    sortTableByDate();
                    TinhTienPhaiThu();
                }
            }
        })
    }

    function CheckBtn() {
        //var slRow = $(".row-guid").length;
        //if (slRow == 1) {
        //    $(".btn-xoa-row").each(function () {
        //        $(this).hide();
        //    })
        //}
        //else {
        //    $(".btn-xoa-row").each(function () {
        //        $(this).show();
        //    })
        //}
    }

    function ChangeSoTienThu() {
        if (changeSoTienThu) {
            $(".row-so-tien-thu input").each(function () {
                var id = $(this).attr("id");
                if (id) {
                    $("#" + id).data("kendoNumericTextBox").value(sotienThu);
                }
            });
        }
    }

    function convertStringToDate(dateString) {

        if (dateString) {
            var temp = dateString.split('/');
            var d = new Date(temp[1] + '/' + temp[0] + '/' + temp[2]);
            return d;
        }
        return new Date('01/01/1752');
    }

    function CheckDateBeforeAddRow() {
        var result = true;
        inputFirst = $('#ThuChiTable td[data-ngayThu-isFirst = "True"]').find('input').val();
        idFirst = $('#ThuChiTable td[data-ngayThu-isFirst = "True"]').find('input').attr('id');
        if (inputFirst == '') {
            result = false;
            showInvalidMessage(idFirst, "Ngày thu không được bỏ trống");
        } else {

            var NGAY_THU_First = convertStringToDate(inputFiModeloCountdelst);
            $('#ThuChiTable td[data-ngayThu-isFirst = "False"]').each(function () {
                var inputDate = $(this).find('input');
                var id = inputDate.attr('id');
                if (inputDate.val() == '') {
                    showInvalidMessage(id, "Ngày thu không được bỏ trống");
                    result = false;
                } else {
                    hideValmsg(id);
                    let Ngay_Thu = convertStringToDate(inputDate.val());
                    if (NGAY_THU_First > Ngay_Thu) {
                        showInvalidMessage(id, "Ngày thu không được \n \n nhỏ hơn ngày Thu ban đầu");
                        result = false;
                    } else {
                        hideValmsg(id);

                    }
                }
            })

        }
        return result;
    }

    function TinhTienPhaiThu() {
        // tìm ra Row Đầu tiên
        let FirstRow = $('#ThuChiTable tr[data-isFirst = "True"]');

        // Guild dòng đầu tiên
        let FistRowGuild = FirstRow.find('th').attr('data-guid');
        let TongTienPhaiThu = FirstRow.find("#@(Html.IdFor(c=>c.SO_TIEN_PHAI_THU))_" + FistRowGuild);
        let SoTienDaThuLanDau = FirstRow.find("#@(Html.IdFor(c=>c.SO_TIEN_THU))_" + FistRowGuild);
        let SoTienConPhaiThuLanDau = FirstRow.find("#@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + FistRowGuild);

        // tính tổng tiền phải thu ban đầu
        let TongTienPhaiThuVal = parseInt(TongTienPhaiThu.val() == '' ? "0" : TongTienPhaiThu.val());
        let SoTienDaThuLanDauVal = parseInt(SoTienDaThuLanDau.val() == '' ? "0" : SoTienDaThuLanDau.val());
     
        // check trường hợp nhập sai số thu > số phải thu thì cho số thu = số phải thu còn lại
        let TienPhaiThuLuyKe = 0;
        let TienPhaiThuLuyKeBanDau = TongTienPhaiThuVal - SoTienDaThuLanDauVal;
        if (TienPhaiThuLuyKeBanDau < 0) {
          
            SoTienDaThuLanDau.data('kendoNumericTextBox').value(TongTienPhaiThuVal);
            SoTienConPhaiThuLanDau.data('kendoNumericTextBox').value(TienPhaiThuLuyKe);

        } else {
            SoTienConPhaiThuLanDau.data('kendoNumericTextBox').value(TienPhaiThuLuyKeBanDau);
            TienPhaiThuLuyKe = TienPhaiThuLuyKeBanDau;
        }
        // bắt đầu tính các dòng khác
        $('#ThuChiTable tr').each(function () {
            // guild của thu chi khác    
                let guid = $(this).find('th').attr('data-guid');
                if (guid) {
                // loại thu chi ban đầu
                if (guid != FistRowGuild) {
                    // tìm input tiền phải thu
                    let inputTienPhaiThu = $(this).find("#@(Html.IdFor(c=>c.SO_TIEN_PHAI_THU))_" + guid);
                    let inputTienThu = $(this).find("#@(Html.IdFor(c=>c.SO_TIEN_THU))_" + guid);
                    let inputTienConPhaiThu = $(this).find("#@(Html.IdFor(c=>c.SO_TIEN_CON_PHAI_THU))_" + guid);
                  
                    if (inputTienPhaiThu.data('kendoNumericTextBox')) {
                        // tiền phải thu == tiền phải thu lũy kees
                        inputTienPhaiThu.data('kendoNumericTextBox').value(TienPhaiThuLuyKe);
                        
                    }

                    let inputTienThuVal = parseInt(inputTienThu.val() == '' ? "0" : inputTienThu.val());
                    // tiền phải thu lũy kế = tiền phải thu trước đó - tiền thu của thu chi đó
                    
                    let TienPhaiThuTiepTheo = TienPhaiThuLuyKe - inputTienThuVal;
                    if (TienPhaiThuTiepTheo >=  0 ) {
                        TienPhaiThuLuyKe = TienPhaiThuTiepTheo;
                        if (inputTienConPhaiThu.data('kendoNumericTextBox')) {
                            inputTienConPhaiThu.data('kendoNumericTextBox').value(TienPhaiThuTiepTheo);
                        }
                       
                    } else {
                        if (inputTienThu) {
                            // tiền phải thu == tiền phải thu lũy kế
                            if (inputTienThu.data('kendoNumericTextBox')) {
                                inputTienThu.data('kendoNumericTextBox').value(TienPhaiThuLuyKe);
                            }
                            if (inputTienConPhaiThu.data('kendoNumericTextBox')) {
                                inputTienConPhaiThu.data('kendoNumericTextBox').value(0);
                            }
                            
                                                     
                            TienPhaiThuLuyKe = 0;
                           
                        }
                    }

                }
            }
           
        });

        }

</script>
<style>
    .th-center {
        text-align: center !important;
    }

</style>
