@model DateTime?
@{
    var _idClient = Html.IdForModel();
    var _disable = "";
    var htmlAttributes = new Dictionary<string, object>();
    if (ViewData.ContainsKey("htmlAttributes") && ViewData["htmlAttributes"] != null)
    {
        htmlAttributes = (Dictionary<string, object>)ViewData["htmlAttributes"];
        object _idclientOut;
        if (htmlAttributes.TryGetValue("id", out _idclientOut))
        {
            _idClient = _idclientOut.ToString();
        }
        object _disableOut;
        if (htmlAttributes.TryGetValue("disabled", out _disableOut))
        {
            _disable = _disableOut.ToString();
        }
       
    }
}
<input id="@_idClient" name="@Html.NameForModel()" value="@(Model > DateTime.MinValue || Model.HasValue ? Model.Value.ToString(GS.Core.CommonHelper.DATE_FORMAT_VN) : null)" placeholder="dd/mm/yyyy" />
<script>
    $(document).ready(function () {
        $("#@_idClient").kendoMaskedTextBox({
            mask: "00/00/0000"
        });
        $("#@_idClient").kendoDatePicker({
            format: "@(GS.Core.CommonHelper.DATE_FORMAT_VN)",
            culture: "vi-VN"
        });
        $("#@_idClient").closest(".k-datepicker")
            .add($("#@_idClient"))
            .removeClass("k-textbox");
        if ("@_disable"== "disabled") {
            $("#@_idClient").data("kendoDatePicker").enable(false);
        }
        $("#@_idClient").change(function () {
            if (!checkValidateDate("#@_idClient")) {
                $("#@_idClient").data("kendoDatePicker").value(null);
            }
        })
    });
</script>
